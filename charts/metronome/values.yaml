# Default values for metronome.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 147376904629.dkr.ecr.us-gov-east-1.amazonaws.com/metronome
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.0.2"

imagePullSecrets: 
  - name: aws-erc
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 80

ingress:
  enabled: true
  className: "alb"
  annotations: 
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: '80'
    alb.ingress.kubernetes.io/healthcheck-path: /resource/index.html
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '10'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '8'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '5'
    alb.ingress.kubernetes.io/shield-advanced-protection: 'false'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws-us-gov:acm:us-gov-east-1:147376904629:certificate/0a92bf11-e905-4291-9c5f-4a97c6332dff
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: metronome-dha.radustech.io
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  requests:
    memory: "12Gi"
  limits: 
    memory: "12Gi"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

#Environment variables
metronomeDASUrl: https://metronome-dha.radustech.io:8082
metronomeIntDASUrl: http://localhost:8082
metronomeAppUrl: https://metronome-dha.radustech.io:8083
metronomeIntAppUrl: http://localhost:8083
metronomeEvalUrl: https://metronome-dha.radustech.io:3000
metronomeIntEvalUrl: http://localhost:3000
metronomeWebUrl: https://metronome-dha.radustech.io
metronomeResourceUrl: https://metronome-dha.radustech.io/
metronomeResourceDevUrl: https://metronome-dha.radustech.io/
metronomeCookieDomain: metronome-dha.radustech.io
metronomeVirtualHost: metronome-dha.radustech.io

cassandra:
  image:
    registry: docker.io
    repository: bitnami/cassandra
    tag: 3.11.13-debian-11-r3

  dbUser:
    user: cassandra
    password: cassandra

  cluster:
    name: metronome
    seedCount: 1
    numTokens: 256
    datacenter: dc1
    rack: rack1
    endpointSnitch: SimpleSnitch
  
  jvm:
    maxHeapSize: 4g
    newHeapSize: 800m

  replicaCount: 2

  initDBConfigMap: init-db

elasticsearch:
  clusterName: metronome
  replicas: 2

  image: "registry1.dso.mil/ironbank/elastic/elasticsearch/elasticsearch"
  imageTag: "7.17.9"
  imagePullSecrets: 
   - name: dsopcred

  secret:
   enabled: true
   password: "elastic"

  protocol: http

  esConfig:
    elasticsearch.yml: |
      xpack.security.enabled: false
      xpack.security.http.ssl.enabled: false
      xpack.security.transport.ssl.enabled: false

  extraEnvs:
    - name: xpack.security.enabled
      value: "false"
    - name: xpack.security.http.ssl.enabled
      value: "false"
    - name: xpack.security.transport.ssl.enabled
      value: "false"
