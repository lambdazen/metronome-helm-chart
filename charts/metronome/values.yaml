# Default values for metronome.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  repository: 147376904629.dkr.ecr.us-gov-east-1.amazonaws.com/metronome
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.2.3.11"

imagePullSecrets: 
  - name: aws-erc
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: 
  capabilities:
    add:
      - NET_BIND_SERVICE
  privileged: false
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1001
  allowPrivilegeEscalation: false
  #runAsUser: 0

service:
  type: NodePort
  port: 8080

ingress:
  enabled: true
  className: "alb"
  annotations: 
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: '8080'
    alb.ingress.kubernetes.io/healthcheck-path: /resource/index.html
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '10'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '8'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '5'
    alb.ingress.kubernetes.io/shield-advanced-protection: 'false'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws-us-gov:acm:us-gov-east-1:147376904629:certificate/0a92bf11-e905-4291-9c5f-4a97c6332dff
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: metronome-dha.radustech.io
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  requests:
    memory: "12Gi"
  limits: 
    memory: "12Gi"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

#Environment variables
metronomeDASUrl: https://metronome-dha.radustech.io:8082
metronomeIntDASUrl: http://localhost:8082
metronomeAppUrl: https://metronome-dha.radustech.io:8083
metronomeIntAppUrl: http://localhost:8083
metronomeEvalUrl: https://metronome-dha.radustech.io:3000
metronomeIntEvalUrl: http://localhost:3000
metronomeWebUrl: https://metronome-dha.radustech.io
metronomeResourceUrl: https://metronome-dha.radustech.io/
metronomeResourceDevUrl: https://metronome-dha.radustech.io/
metronomeCookieDomain: metronome-dha.radustech.io
metronomeVirtualHost: metronome-dha.radustech.io
metronomeEmailHost: smtp.gmail.com
metronomeEmailPort: "465"
metronomeEmailSecure: "true"
metronomeEmailUser: ""
metronomeEmailPass: ""
metronomeEmailFrom: ""
metronomeAuthProvider: metronome
metronomeAuthProviderUrl: https://auth.radustech.io
metronomeAuthProviderRealm: metronome
metronomeAuthProviderClientId: metronomedha
metronomeAuthProviderClientSecret: 50daed13-fc5f-4a93-aafe-c30060706f96

cassandra:
  image:
    registry: 147376904629.dkr.ecr.us-gov-east-1.amazonaws.com
    repository: metronome-cassandra
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.2.3.5"

  imagePullSecrets: 
    - name: aws-erc

  # image:
  #  registry: docker.io
  #  repository: bitnami/cassandra
  #  tag: 4.1.2-debian-11-r16

  dbUser:
    user: cassandra
    password: tnc{SJH<Ba@46k=yDD

  cluster:
    name: metronome
    seedCount: 1
    numTokens: 256
    datacenter: dc1
    rack: rack1
    endpointSnitch: SimpleSnitch

  config:
    cassandra-yaml:
      audit_logging_options:
        enabled: true
        logger:
          - class_name: FileAuditLogger
  
  jvm:
    maxHeapSize: 4g
    newHeapSize: 800m

  replicaCount: 2

  initDBConfigMap: init-db

  # podSecurityContext:
  #  enabled: true
  #  runAsUser: 0
  #  runAsNonRoot: false

  #containerSecurityContext:
  #  enabled: true
  #  runAsUser: 0
  #  runAsNonRoot: false

elasticsearch:
  clusterName: metronome
  replicas: 2

  image: "147376904629.dkr.ecr.us-gov-east-1.amazonaws.com/metronome-elasticsearch"
  imageTag: "1.2.3.7"
  imagePullSecrets: 
    - name: aws-erc

  #image: "registry1.dso.mil/ironbank/elastic/elasticsearch/elasticsearch"
  #imageTag: "7.17.9"
  #imagePullSecrets: 
  # - name: dsopcrednew

  secret:
   enabled: true
   password: ";lr6GbG%,Gau@@E3~="

  protocol: http

  esConfig:
    elasticsearch.yml: |
      xpack.security.enabled: false
      xpack.security.http.ssl.enabled: false
      xpack.security.transport.ssl.enabled: false
      xpack.security.audit.enabled: false
      xpack.ml.enabled: false
      http.port: 8888
      network.host: 0.0.0.0
      discovery.seed_hosts: ["metronome-master-0.metronome-master-headless.metronome-qa.svc.cluster.local","metronome-master-1.metronome-master-headless.metronome-qa.svc.cluster.local" ]
      cluster.initial_master_nodes: ["metronome-master-0.metronome-master-headless.metronome-qa.svc.cluster.local","metronome-master-1.metronome-master-headless.metronome-qa.svc.cluster.local" ]


  extraEnvs:
    - name: xpack.security.enabled
      value: "false"
    - name: xpack.security.http.ssl.enabled
      value: "false"
    - name: xpack.security.transport.ssl.enabled
      value: "false"
    - name: xpack.security.audit.enabled
      value: "false"
    - name: xpack.ml.enabled
      value: "false"
