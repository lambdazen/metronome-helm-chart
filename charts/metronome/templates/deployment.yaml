apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "metronome.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "metronome.labels" . | nindent 4 }}
spec:
  serviceName: metronome-discovery
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "metronome.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "metronome.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "metronome.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: hazelcast-config-volume
              mountPath: /usr/local/conceptjs/conf/hazelcast.xml
              subPath: hazelcast.xml
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: das
              containerPort: 5701
              protocol: TCP
            - name: eval
              containerPort: 5702
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /hello
              port: http
            initialDelaySeconds: 600
          readinessProbe:
            httpGet:
              path: /hello
              port: http
            initialDelaySeconds: 600
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: METRONOME_INIT_DB
              value: {{.Values.metronomeInitDB | quote}}
            - name: METRONOME_DEPLOYMENT_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: METRONOME_DB_HOST
              value: {{ .Release.Name }}-cassandra.{{ .Release.Namespace }}.svc.cluster.local
            - name: METRONOME_ES_HOST
              value: {{ .Values.elasticsearch.clusterName }}-master.{{ .Release.Namespace }}.svc.cluster.local
            - name: METRONOME_WEB_HOST_1
              value: {{ include "metronome.fullname" . }}-0.metronome-discovery.{{ .Release.Namespace }}.svc.cluster.local
            - name: METRONOME_WEB_HOST_2
              value: {{ include "metronome.fullname" . }}-1.metronome-discovery.{{ .Release.Namespace }}.svc.cluster.local
            - name: METRONOME_DAS_URL
              value: {{ .Values.metronomeDASUrl }}
            - name: METRONOME_INT_DAS_URL
              value: {{ .Values.metronomeIntDASUrl }}
            - name: METRONOME_APP_URL
              value: {{ .Values.metronomeAppUrl }}
            - name: METRONOME_INT_APP_URL
              value: {{ .Values.metronomeIntAppUrl }}
            - name: METRONOME_EVAL_URL
              value: {{ .Values.metronomeEvalUrl }}
            - name: METRONOME_INT_EVAL_URL
              value: {{ .Values.metronomeIntEvalUrl }}
            - name: METRONOME_WEB_URL
              value: {{ .Values.metronomeWebUrl }}
            - name: METRONOME_RESOURCE_URL
              value: {{ .Values.metronomeResourceUrl }}
            - name: METRONOME_RESOURCE_DEV_URL
              value: {{ .Values.metronomeResourceDevUrl }}
            - name: METRONOME_COOKIE_DOMAIN
              value: {{ .Values.metronomeCookieDomain }}
            - name: METRONOME_VIRTUAL_HOST
              value: {{ .Values.metronomeVirtualHost }}
            - name: METRONOME_DB_USER
              value: {{ .Values.cassandra.dbUser.user }}
            - name: METRONOME_DB_PASS
              value: {{ .Values.cassandra.dbUser.password }}
            - name: METRONOME_EMAIL_HOST
              value: {{ .Values.metronomeEmailHost }}
            - name: METRONOME_EMAIL_PORT
              value: {{ .Values.metronomeEmailPort | quote }}
            - name: METRONOME_EMAIL_SECURE
              value: {{ .Values.metronomeEmailSecure | quote }}
            - name: METRONOME_EMAIL_USER
              value: {{ .Values.metronomeEmailUser }}
            - name: METRONOME_EMAIL_PASS
              value: {{ .Values.metronomeEmailPass }}
            - name: METRONOME_EMAIL_FROM
              value: {{ .Values.metronomeEmailFrom }}
            - name: METRONOME_AUTH_PROVIDER
              value: {{ .Values.metronomeAuthProvider }}
            - name: METRONOME_AUTH_PROVIDER_URL
              value: {{ .Values.metronomeAuthProviderUrl }}
            - name: METRONOME_AUTH_PROVIDER_REALM
              value: {{ .Values.metronomeAuthProviderRealm }}
            - name: METRONOME_AUTH_PROVIDER_CLIENT_ID
              value: {{ .Values.metronomeAuthProviderClientId }}
            - name: METRONOME_AUTH_PROVIDER_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: rhsso-client-secret
                  key: METRONOME_AUTH_PROVIDER_CLIENT_SECRET
      volumes:
        - name: hazelcast-config-volume
          configMap:
            name: hazelcast-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
